{"version":3,"file":"static/js/reviews.5c0b93ef.chunk.js","mappings":"2NACA,GAAgB,MAAQ,uBAAuB,OAAS,wBAAwB,OAAS,yB,SCI1E,SAASA,IACpB,IAAMC,GAAYC,EAAAA,EAAAA,MAAZD,QACN,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAKA,OAJAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,GAAsBN,GAASO,MAAK,SAAAC,GAAMJ,EAAWI,EAAEC,cACxD,CAACT,KAGA,iCACI,eAAIU,UAAWC,EAAAA,MAAf,sBACA,wBACuB,IAAlBR,EAAQS,OAAeT,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACpC,gBAAaN,UAAWC,EAAAA,OAAxB,WACI,eAAGD,UAAWC,EAAAA,OAAd,qBAAiCI,MACjC,cAAGL,UAAWC,EAAAA,KAAd,SAAuBK,MAFlBF,OAIF,6D,oLCLjBG,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SAC2BC,MAAMF,EAAKC,GADtC,YACUE,EADV,QAEoBC,GAFpB,iCAGcD,EAASE,OAHvB,gDAIQC,QAAQC,OAAO,IAAIC,MAAM,cAJjC,2GAOO,SAASC,IACZ,OAAOV,EAAuB,GAAD,OAAIF,EAAJ,uCAA2CC,IAGrE,SAASY,EAAiB9B,GAC7B,OAAOmB,EAAuB,GAAD,OAAIF,EAAJ,kBAAsBjB,EAAtB,oBAAyCkB,IAGnE,SAASa,EAAkB/B,GAC9B,OAAOmB,EAAuB,GAAD,OACxBF,EADwB,kBACNjB,EADM,4BACqBkB,EADrB,2BAI1B,SAASc,EAAkBhC,GAC9B,OAAOmB,EAAuB,GAAD,OACxBF,EADwB,kBACNjB,EADM,4BACqBkB,IAM/C,SAASe,EAAqBC,GACnC,OAAOf,EAAuB,GAAD,OACxBF,EADwB,+BACOiB,EADP,oBACwBhB,EADxB","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.js","services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Reviews_title__k4Aww\",\"review\":\"Reviews_review__a4183\",\"author\":\"Reviews_author__+jR0D\"};","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as API from '../../services/API';\r\nimport s from './Reviews.module.css';\r\n\r\nexport default function Reviews () {\r\n    let { movieId } = useParams();\r\n    const [reviews, setReviews] = useState([]);\r\n    useEffect(() => {\r\n        API.FetchMovieReviews(movieId).then(r => {setReviews(r.results);});\r\n    }, [movieId]);\r\n\r\n    return (\r\n        <> \r\n            <h5 className={s.title}>Reviews</h5>\r\n            <ul>\r\n                {reviews.length !==0 ? (reviews.map(({ id, author, content }) => (\r\n                <li key={id} className={s.review}>\r\n                    <p className={s.author}>Author: {author}</p>\r\n                    <p className={s.text}>{content}</p>\r\n                </li>\r\n                ))) : (<p>We haven't any reviews yet</p>)}\r\n            </ul>\r\n        \r\n        \r\n        </>\r\n    )\r\n}\r\n\r\n","\r\n// 16600ad2b0f485ce73541bf9aac86f47\r\n// https://api.themoviedb.org/3/movie/550?api_key=16600ad2b0f485ce73541bf9aac86f47\r\n\r\n\r\n// // /trending/get-trending \r\n// список самых популярных фильмов на сегодня для создания коллекции на главной странице.\r\n// // /search/search-movies \r\n// поиск кинофильма по ключевому слову на странице фильмов.\r\n// // /movies/get-movie-details \r\n// запрос полной информации о фильме для страницы кинофильма.\r\n// // /movies/get-movie-credits \r\n// запрос информации о актёрском составе для страницы кинофильма.\r\n// // /movies/get-movie-reviews \r\n// запрос обзоров для страницы кинофильма.\r\n\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '16600ad2b0f485ce73541bf9aac86f47';\r\n\r\nasync function fetchWithErrorHandling(url = '', config = {}) {\r\n    const response = await fetch(url, config);\r\n    return response.ok\r\n      ? await response.json()\r\n      : Promise.reject(new Error('Not found'));\r\n}\r\n\r\nexport function fetchTrendingMovies() {\r\n    return fetchWithErrorHandling(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`, );\r\n}\r\n\r\nexport function fetchMovieDetais(movieId) {\r\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`, );\r\n}\r\n\r\nexport function FetchMovieReviews(movieId) {\r\n    return fetchWithErrorHandling(\r\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\r\n    );\r\n}\r\nexport function FetchMovieCredits(movieId) {\r\n    return fetchWithErrorHandling(\r\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`,\r\n    );\r\n}\r\n\r\n\r\n\r\nexport function FetchSearchingMovies(query) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}&include_adult=false`,\r\n  );\r\n}"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","API","then","r","results","className","s","length","map","id","author","content","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMovieDetais","FetchMovieReviews","FetchMovieCredits","FetchSearchingMovies","query"],"sourceRoot":""}