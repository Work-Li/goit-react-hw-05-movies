{"version":3,"file":"static/js/movie-details-page.6cae1f04.chunk.js","mappings":"sSAgBMA,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SAC2BC,MAAMF,EAAKC,GADtC,YACUE,EADV,QAEoBC,GAFpB,iCAGcD,EAASE,OAHvB,gDAIQC,QAAQC,OAAO,IAAIC,MAAM,cAJjC,2GAOO,SAASC,IACZ,OAAOV,EAAuB,GAAD,OAAIF,EAAJ,uCAA2CC,IAGrE,SAASY,EAAiBC,GAC7B,OAAOZ,EAAuB,GAAD,OAAIF,EAAJ,kBAAsBc,EAAtB,oBAAyCb,IAGnE,SAASc,EAAkBD,GAC9B,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,kBACNc,EADM,4BACqBb,EADrB,2BAI1B,SAASe,EAAkBF,GAC9B,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,kBACNc,EADM,4BACqBb,IAM/C,SAASgB,EAAqBC,GACnC,OAAOhB,EAAuB,GAAD,OACxBF,EADwB,+BACOkB,EADP,oBACwBjB,EADxB,2B,8EC/C/B,EAAsB,qB,kBCEP,SAASkB,EAAT,GAA8B,IAAZC,EAAW,EAAXA,SAIzBC,GAAWC,EAAAA,EAAAA,MAIf,OACI,mBAAQC,KAAK,SAASC,UAAWC,EAAOC,QAJ/B,WAAO,IAAD,IACnBL,EAAQ,iBAACD,QAAD,IAACA,GAAD,UAACA,EAAUO,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,MAG9B,kB,sBCNFC,GAAYC,EAAAA,EAAAA,OAAK,kBACrB,gCAKa,SAASC,IACpB,IAAMX,GAAWY,EAAAA,EAAAA,MAEVlB,GAAWmB,EAAAA,EAAAA,MAAXnB,QACP,GAA0BoB,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,GACkB1B,GACjB2B,KAAKL,KACP,CAACtB,KAGNyB,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAL,CAGA,IACMO,EADMP,EAAME,OACGM,KAAI,SAAAC,GAAI,OAAIA,EAAKA,QAAMC,KAAK,MACjDP,EAAUI,MACT,CAACP,KAIE,iCACI,SAAChB,EAAD,CAASC,SAAUA,KACnB,SAAC,EAAA0B,SAAD,CAAUC,UAAU,uCAApB,SACCZ,IAAS,SAACN,EAAD,CAAWM,MAAOA,EAAOE,OAAQA,OAE3C,SAAC,KAAD","sources":["services/API.js","webpack://goit-react-hw-05-movies/./src/components/BackBtn/BackBtn.module.css?2b72","components/BackBtn/BackBtn.js","views/MovieDetailsPage.js"],"sourcesContent":["\r\n// 16600ad2b0f485ce73541bf9aac86f47\r\n// https://api.themoviedb.org/3/movie/550?api_key=16600ad2b0f485ce73541bf9aac86f47\r\n\r\n\r\n// // /trending/get-trending \r\n// список самых популярных фильмов на сегодня для создания коллекции на главной странице.\r\n// // /search/search-movies \r\n// поиск кинофильма по ключевому слову на странице фильмов.\r\n// // /movies/get-movie-details \r\n// запрос полной информации о фильме для страницы кинофильма.\r\n// // /movies/get-movie-credits \r\n// запрос информации о актёрском составе для страницы кинофильма.\r\n// // /movies/get-movie-reviews \r\n// запрос обзоров для страницы кинофильма.\r\n\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '16600ad2b0f485ce73541bf9aac86f47';\r\n\r\nasync function fetchWithErrorHandling(url = '', config = {}) {\r\n    const response = await fetch(url, config);\r\n    return response.ok\r\n      ? await response.json()\r\n      : Promise.reject(new Error('Not found'));\r\n}\r\n\r\nexport function fetchTrendingMovies() {\r\n    return fetchWithErrorHandling(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`, );\r\n}\r\n\r\nexport function fetchMovieDetais(movieId) {\r\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`, );\r\n}\r\n\r\nexport function FetchMovieReviews(movieId) {\r\n    return fetchWithErrorHandling(\r\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\r\n    );\r\n}\r\nexport function FetchMovieCredits(movieId) {\r\n    return fetchWithErrorHandling(\r\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`,\r\n    );\r\n}\r\n\r\n\r\n\r\nexport function FetchSearchingMovies(query) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}&include_adult=false`,\r\n  );\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"BackBtn_btn__vXDJd\"};","import s from './BackBtn.module.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function BackBtn({location}) {\r\n    // const GoBack = () => {\r\n\r\n    // }\r\n    let navigate = useNavigate();\r\n  const GoBack = () => {\r\n    navigate(location?.state?.from ?? '/');\r\n  };\r\n    return (\r\n        <button type='button' className={s.btn} onClick={GoBack}>back</button>\r\n    )\r\n}","// import { useParams } from \"react-router-dom\";\r\nimport BackBtn from \"../components/BackBtn/BackBtn\";\r\nimport {  Outlet, useLocation, useParams  } from 'react-router-dom';\r\nimport {useState, useEffect, lazy, Suspense } from 'react';\r\nimport * as API from '../services/API';\r\n\r\nconst MovieCard = lazy(() =>\r\n  import(\r\n    '../components/MovieCard/MovieCard.js' /* webpackChunkName: \"movie-card\" */\r\n  ),\r\n);\r\n\r\nexport default function MovieDetailsPage () {\r\n    const location = useLocation();\r\n   \r\n    const {movieId} = useParams();\r\n    const [movie, setMovie] = useState(null);\r\n    const [genres, setGenres] = useState('');\r\n\r\n    useEffect(() => {\r\n        API\r\n        .fetchMovieDetais(movieId)\r\n        .then(setMovie);\r\n    }, [movieId]); \r\n\r\n    \r\n  useEffect(() => {\r\n    if (!movie) {\r\n      return;\r\n    }\r\n    let names = movie.genres;\r\n    const string = names.map(name => name.name).join(', ');\r\n    setGenres(string);\r\n  }, [movie]);\r\n\r\n\r\n    return (\r\n        <> \r\n            <BackBtn location={location}/>\r\n            <Suspense fallback={<h4>Loading...</h4>}>\r\n            {movie && <MovieCard movie={movie} genres={genres} />}\r\n            </Suspense>\r\n            <Outlet />\r\n\r\n        \r\n        </>\r\n    );\r\n}"],"names":["BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMovieDetais","movieId","FetchMovieReviews","FetchMovieCredits","FetchSearchingMovies","query","BackBtn","location","navigate","useNavigate","type","className","s","onClick","state","from","MovieCard","lazy","MovieDetailsPage","useLocation","useParams","useState","movie","setMovie","genres","setGenres","useEffect","API","then","string","map","name","join","Suspense","fallback"],"sourceRoot":""}