{"version":3,"file":"static/js/cast.023f0123.chunk.js","mappings":"2NACA,EAAuB,mBAAvB,EAAmD,qBAAnD,EAAgF,oBAAhF,EAA4G,oBAA5G,EAAuI,mB,SCMxH,SAASA,IACpB,IAAMC,GAAYC,EAAAA,EAAAA,MAAZD,QACN,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,GAAsBN,GACjBO,MAAK,SAAAC,GAAMJ,EAAQI,EAAEL,WAC3B,CAACH,KAIA,qCAAG,eAAIS,UAAWC,EAAf,mBACH,eAAID,UAAWC,EAAf,SACKP,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACN,gBAAIN,UAAWC,EAAf,WACI,gBAAKM,IAAG,yCAAoCH,GAAgBI,IAAK,CAAEH,KAAAA,GAAQL,UAAWC,KACtF,eAAGD,UAAWC,EAAd,wBAAkCK,MAClC,cAAGN,UAAWC,EAAd,SAAuBI,MAHEF,a,oLCLvCM,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SAC2BC,MAAMF,EAAKC,GADtC,YACUE,EADV,QAEoBC,GAFpB,iCAGcD,EAASE,OAHvB,gDAIQC,QAAQC,OAAO,IAAIC,MAAM,cAJjC,2GAOO,SAASC,IACZ,OAAOV,EAAuB,GAAD,OAAIF,EAAJ,uCAA2CC,IAGrE,SAASY,EAAiB/B,GAC7B,OAAOoB,EAAuB,GAAD,OAAIF,EAAJ,kBAAsBlB,EAAtB,oBAAyCmB,IAGnE,SAASa,EAAkBhC,GAC9B,OAAOoB,EAAuB,GAAD,OACxBF,EADwB,kBACNlB,EADM,4BACqBmB,EADrB,2BAI1B,SAASc,EAAkBjC,GAC9B,OAAOoB,EAAuB,GAAD,OACxBF,EADwB,kBACNlB,EADM,4BACqBmB,IAM/C,SAASe,EAAqBC,GACnC,OAAOf,EAAuB,GAAD,OACxBF,EADwB,+BACOiB,EADP,oBACwBhB,EADxB","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__8aoft\",\"person\":\"Cast_person__ecB2n\",\"title\":\"Cast_title__MnxtY\",\"image\":\"Cast_image__OutwE\",\"text\":\"Cast_text__ZpdF6\"};","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as API from '../../services/API';\r\nimport s from './Cast.module.css';\r\n\r\n\r\n\r\nexport default function Cast () {\r\n    let { movieId } = useParams();\r\n    const [cast, setCast] = useState([]);\r\n\r\n    useEffect(() => {\r\n        API.FetchMovieCredits(movieId)\r\n            .then(r => {setCast(r.cast);});\r\n    }, [movieId]);\r\n\r\n\r\n    return (\r\n        <> <h5 className={s.title}>Cast</h5>\r\n        <ul className={s.cast}>\r\n            {cast.map(({ id, profile_path, name, character }) => (\r\n                <li className={s.person}key={id}>\r\n                    <img src={`https://image.tmdb.org/t/p/w300${profile_path}`} alt={{ name }} className={s.image}/> \r\n                    <p className={s.text}>Character: {character}</p>\r\n                    <p className={s.text}>{name}</p>\r\n                </li>\r\n        ))}\r\n        </ul>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","\r\n// 16600ad2b0f485ce73541bf9aac86f47\r\n// https://api.themoviedb.org/3/movie/550?api_key=16600ad2b0f485ce73541bf9aac86f47\r\n\r\n\r\n// // /trending/get-trending \r\n// список самых популярных фильмов на сегодня для создания коллекции на главной странице.\r\n// // /search/search-movies \r\n// поиск кинофильма по ключевому слову на странице фильмов.\r\n// // /movies/get-movie-details \r\n// запрос полной информации о фильме для страницы кинофильма.\r\n// // /movies/get-movie-credits \r\n// запрос информации о актёрском составе для страницы кинофильма.\r\n// // /movies/get-movie-reviews \r\n// запрос обзоров для страницы кинофильма.\r\n\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '16600ad2b0f485ce73541bf9aac86f47';\r\n\r\nasync function fetchWithErrorHandling(url = '', config = {}) {\r\n    const response = await fetch(url, config);\r\n    return response.ok\r\n      ? await response.json()\r\n      : Promise.reject(new Error('Not found'));\r\n}\r\n\r\nexport function fetchTrendingMovies() {\r\n    return fetchWithErrorHandling(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`, );\r\n}\r\n\r\nexport function fetchMovieDetais(movieId) {\r\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`, );\r\n}\r\n\r\nexport function FetchMovieReviews(movieId) {\r\n    return fetchWithErrorHandling(\r\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\r\n    );\r\n}\r\nexport function FetchMovieCredits(movieId) {\r\n    return fetchWithErrorHandling(\r\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`,\r\n    );\r\n}\r\n\r\n\r\n\r\nexport function FetchSearchingMovies(query) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}&include_adult=false`,\r\n  );\r\n}"],"names":["Cast","movieId","useParams","useState","cast","setCast","useEffect","API","then","r","className","s","map","id","profile_path","name","character","src","alt","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMovieDetais","FetchMovieReviews","FetchMovieCredits","FetchSearchingMovies","query"],"sourceRoot":""}